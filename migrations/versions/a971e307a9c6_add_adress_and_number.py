"""add adress and number

Revision ID: a971e307a9c6
Revises: c4e02447874f
Create Date: 2024-09-30 22:47:06.122894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a971e307a9c6'
down_revision: Union[str, None] = 'c4e02447874f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_address')
    op.add_column('users', sa.Column('addresses', sa.String(), nullable=True))
    op.add_column('users', sa.Column('number', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'users', ['number'])
    op.add_column('users_history', sa.Column('address', sa.String(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users_history', 'address')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'number')
    op.drop_column('users', 'addresses')
    op.create_table('user_address',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_address_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_address_pkey')
    )
    # ### end Alembic commands ###
